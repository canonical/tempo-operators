# This file configures Charmcraft.
# See https://juju.is/docs/sdk/charmcraft-config for guidance.

type: charm
name: tempo-worker-k8s
title: Tempo Charmed Operator [distributed mode] worker node

assumes:
  - k8s-api
  # Juju 3.4+ needed for pebble log forwarding
  - juju >= 3.4.0

summary: Tempo for Kubernetes clusters.
description: |
  Grafana Tempo is an open source software project that provides a scalable distributed tracing backend.
  This charm deploys and operates Tempo on Kubernetes clusters.

links:
  documentation: https://discourse.charmhub.io/t/tempo-worker-k8s-index/13464
  source: https://github.com/canonical/tempo-worker-k8s-operator
  issues: https://github.com/canonical/tempo-worker-k8s-operator/issues


# relations

requires:
  tempo-cluster:
    interface: tempo_cluster
    limit: 1

storage:
  data:
    type: filesystem
    description: Common storage point for all components


# workloads

containers:
  tempo:
    resource: tempo-image
    mounts:
      - storage: data
        location: /data

resources:
  tempo-image:
    type: oci-image
    description: OCI image for Grafana Tempo
    upstream-source: docker.io/ubuntu/tempo:2-22.04


# config

config:
  options:
    role:
      description: |
        The role that this tempo worker will run with.
        Possible roles are:
          - "scalable-single-binary" # default
          - "querier"
          - "query-frontend"
          - "ingester"
          - "distributor"
          - "compactor"
          - "metrics-generator"
        Note that for a tempo deployment to be valid, each one of these roles needs to be
        assigned to at least one worker node. Or, at least one node need to have the "all" role.
      type: string
      default: scalable-single-binary


# build info

bases:
  - build-on:
      - name: ubuntu
        channel: "22.04"
    run-on:
      - name: ubuntu
        channel: "22.04"


parts:
  charm:
    # todo: do we still need those?
    #    build-packages:
    #      - git
    #      - libffi-dev
    #      - libssl-dev
    #      - pkg-config
    #      - rustc
    #      - cargo
    charm-binary-python-packages:
      - "pydantic>=2"
      - "opentelemetry-exporter-otlp-proto-http==1.21.0"
